Random benchmark generator
  1. no. of variables
  2. maximum degree (maximum must be included, lesser degrees are optional)
  3. no. of equations
  4. maximum size of coefficient (maximum size must be included, lesser sizes are optional)
  5. seed for randomization (optional parameter)


first line is a comment with meta-info:
    ; 3_var, 2_deg, 4_eq, 6_co, 12_sd


Misc ideas:
- Tool to edit existing tests to include meta-info on first line


def generate_benchmark(var, deg, eq, co, sd=None):
    if sd is None:
        sd = random(0, 1000)
    
    def generate_smt2(lines):
        save(lines, tests/)

class Benchmark_Generator:
    def __init__(self, max_var, max_deg, max_eq, max_co, total_tests, equation_only=False, complex_bias=False):
        # complex_bias=False attempts to equally represent min to max values
        # complex_bias=True only uses max or close-to-max values


1. construct problem, then convert to smt2
    problem_creator -> smt2_converter
    7x 
2. 
